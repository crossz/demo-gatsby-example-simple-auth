{"version":3,"file":"component---src-pages-index-js-1b4209df18dcff9ccfa6.js","mappings":"kNAEWA,EAAe,qCCuC1B,EAlCe,WACb,IAAIC,EACJ,IAAKC,EAAAA,EAAAA,MAQE,CACL,OAAwBC,EAAAA,EAAAA,MAAhBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdJ,EACE,qBAAGK,UAAWN,GAAd,gBACgBI,EADhB,KACwBC,EADxB,SAIE,qBACEE,KAAK,IACLC,QAAS,SAAAC,GACPA,EAAMC,kBACNC,EAAAA,EAAAA,KAAO,kBAAMC,EAAAA,EAAAA,UAAS,mBAJ1B,iBAfJX,EACE,qBAAGK,UAAWN,GAAd,qDAGE,gBAAC,KAAD,CAAMa,GAAG,cAAT,UAHF,KA2BJ,OAAO,uBAAKP,UDrCM,gCCqCcL,K,kFCTlC,UAvBc,kBACZ,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAMa,MAAM,iCACV,yJAIE,qBAAGP,KAAK,6EAAR,8BAJF,yDAUA,8DAGE,gBAAC,KAAD,CAAMM,GAAG,gBAAT,gBAHF,S,6HCpBN,IAAME,EAAY,oBAAOC,OAEnBC,EAAU,kBACdD,OAAOE,aAAaC,WAChBC,KAAKC,MAAML,OAAOE,aAAaC,YAC/B,IAEAG,EAAU,SAAAC,GAAI,OAAKP,OAAOE,aAAaC,WAAaC,KAAKI,UAAUD,IAE5DE,EAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACtC,QAAKZ,IAEO,WAARW,GAAiC,SAARC,IAC3BC,QAAQC,IAAR,+CACOP,EAAQ,CACblB,KAAK,MACL0B,UAAU,gBACVzB,MAAM,uBAOCH,EAAa,WACxB,QAAKa,KAEQE,IAECZ,OAGHF,EAAiB,kBAAMY,GAAaE,KAEpCN,EAAS,SAAAoB,GACfhB,IAELa,QAAQC,IAAR,8CACAP,EAAQ,IACRS","sources":["webpack://gatsby-demo-simple-auth/./src/components/Status/status.module.css","webpack://gatsby-demo-simple-auth/./src/components/Status/index.js","webpack://gatsby-demo-simple-auth/./src/pages/index.js","webpack://gatsby-demo-simple-auth/./src/utils/auth.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var status = \"status-module--status--4A7TW\";\nexport var status__text = \"status-module--status__text--nWF1F\";","import React from \"react\"\n// import { Link, navigate } from \"@reach/router\"\nimport { navigate } from \"@reach/router\"\nimport { Link } from \"gatsby\"\nimport { getCurrentUser, isLoggedIn, logout } from \"../../utils/auth\"\nimport { status, status__text } from \"./status.module.css\"\n\nconst Status = () => {\n  let details\n  if (!isLoggedIn()) {\n    details = (\n      <p className={status__text}>\n        To get the full app experience, you’ll need to\n        {` `}\n        <Link to=\"/app/login\">log in</Link>.\n      </p>\n    )\n  } else {\n    const { name, email } = getCurrentUser()\n\n    details = (\n      <p className={status__text}>\n        Logged in as {name} ({email}\n        )!\n        {` `}\n        <a\n          href=\"/\"\n          onClick={event => {\n            event.preventDefault()\n            logout(() => navigate(`/app/login`))\n          }}\n        >\n          log out\n        </a>\n      </p>\n    )\n  }\n\n  return <div className={status}>{details}</div>\n}\n\nexport default Status","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport View from \"../components/View\"\nimport Status from \"../components/Status\"\n\nconst Index = () => (\n  <Layout>\n    <Status />\n    <View title=\"Simple Authentication Example\">\n      <p>\n        This is a simple example of creating dynamic apps with Gatsby that\n        require user authentication. It uses concepts from the\n        {` `}\n        <a href=\"https://www.gatsbyjs.com/docs/client-only-routes-and-user-authentication/\">\n          client-only routes section\n        </a>\n        {` `}\n        of the “Building Apps with Gatsby” documentation.\n      </p>\n      <p>\n        For the full experience, go to\n        {` `}\n        <Link to=\"/app/profile\">your profile</Link>.\n      </p>\n    </View>\n  </Layout>\n)\n\nexport default Index\n","const isBrowser = typeof window !== `undefined`\n\nconst getUser = () =>\n  window.localStorage.gatsbyUser\n    ? JSON.parse(window.localStorage.gatsbyUser)\n    : {}\n\nconst setUser = user => (window.localStorage.gatsbyUser = JSON.stringify(user))\n\nexport const handleLogin = ({ username, password }) => {\n  if (!isBrowser) return false\n\n  if (username === `gatsby` && password === `demo`) {\n    console.log(`Credentials match! Setting the active user.`)\n    return setUser({\n      name: `Jim`,\n      legalName: `James K. User`,\n      email: `jim@example.org`,\n    })\n  }\n\n  return false\n}\n\nexport const isLoggedIn = () => {\n  if (!isBrowser) return false\n\n  const user = getUser()\n\n  return !!user.email\n}\n\nexport const getCurrentUser = () => isBrowser && getUser()\n\nexport const logout = callback => {\n  if (!isBrowser) return\n\n  console.log(`Ensuring the \\`gatsbyUser\\` property exists.`)\n  setUser({})\n  callback()\n}\n"],"names":["status__text","details","isLoggedIn","getCurrentUser","name","email","className","href","onClick","event","preventDefault","logout","navigate","to","title","isBrowser","window","getUser","localStorage","gatsbyUser","JSON","parse","setUser","user","stringify","handleLogin","username","password","console","log","legalName","callback"],"sourceRoot":""}